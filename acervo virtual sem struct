#include <iostream>
#include <cstring>
#include <cstdlib>
#define tsem 7
#define tmax 20
using namespace std;

typedef struct{
    string hinicial, hfinal, tipo, local, asst;
}Compromisso;

typedef struct{
    string dma, diasem;
    Compromisso comp[tmax];
}Agenda;

bool validacaoData(string);
void inclusaoCompromisso(int&,Agenda[],int&,Compromisso[]);

int main()
{
    int n=0, m=0;
    Agenda data[tsem];
    Compromisso comp[tmax];

    inclusaoCompromisso(n,data,m,comp);

    return 0;
}

bool validacaoData(string aux)
{
    string aux2;
    int auxint;
    bool resp;
    
    if(aux.size()<10 || aux.size()>10)
        return false;
    
    //for(unsigned int i=0;i<aux.size();i++)
    //    if(!isdigit(aux.at(i)) || aux.at(i)!='/')
     //       return false;
    
    for(unsigned int i=0;i<3;i++){
        if(aux.at(i)=='/'){
            auxint=atoi(aux2.c_str());
            if(auxint<1 || auxint>31)
                return false;            
            for(unsigned int j=i;j<5;j++){
                if(aux.at(j)=='/'){
                    auxint=atoi(aux2.c_str());
                    if(auxint<1 || auxint>12)
                        return false;
                    for(unsigned int k=j+1;k<9;k++){
                        if(aux.at(k)=='/'){
                            auxint=atoi(aux2.c_str());
                            if(auxint!=2022);
                                return false;
                        }
                        aux2+=aux.at(k);
                    }
                }
                aux2+=aux.at(j);
            }
        }
        aux2+=aux.at(i);
    }
    return true;
}

bool validacaoHora(string aux)
{
    if(aux.size()<5 || aux.size()>5)
        return false;
    for(unsigned int i=0;i<aux.size();i++)
        if(!isdigit(aux.at(i)) && aux.at(i)!=':')
            return false;
    return true;
}

//void iniciaSemana(int n, )

void inclusaoCompromisso(int &n, Agenda data[], int &m, Compromisso comp[])
{
    Agenda auxa;
    Compromisso auxc;
    bool resp;

    cout << "INCLUSÃO DE COMPROMISSO" << endl;
    cout << "INFORME:" << endl;

    do{
        cout << "Data (dd/mm/aaaa): ";
        getline(cin,auxa.dma);
        resp=validacaoData(auxa.dma);
        if(!resp)
            cout << "Inconsistência(s) encontrada(s). Tente novamente." << endl;
    }while(!resp);

    do{
        cout << "Hora inicial (00:00): ";
        getline(cin,auxc.hinicial);
        resp=validacaoHora(auxc.hinicial);
        if(!resp)
            cout << "Inconsistência(s) encontrada(s). Tente novamente." << endl;
    }while(!resp);

    do{
        cout << "Hora final (00:00): ";
        getline(cin,auxc.hfinal);
        resp=validacaoHora(auxc.hfinal);
        if(!resp)
            cout << "Inconsistência(s) encontrada(s). Tente novamente." << endl;
    }while(!resp);


}
